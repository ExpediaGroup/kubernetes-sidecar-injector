{{- $caPrefix := printf "%s-ca" .Release.Name }}
{{- $ca := genCA $caPrefix 3650 }}
{{- $cn := .Release.Name }}
{{- $altName1 := printf "%s.%s.svc" (include "service.name" .) .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1) 3650 $ca }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "certs.secret.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
data:
  cert.pem: {{ b64enc $cert.Cert }}
  key.pem: {{ b64enc $cert.Key }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "common.labels" . | indent 4 }}
webhooks:
  - name: kubernetes-sidecar-injector.expedia.com
    clientConfig:
      service:
        name: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        path: "/mutate"
      caBundle: {{ b64enc $ca.Cert }}
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions:
      - v1
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        apiVersions:
          - "*"
        operations:
          - CREATE
        scope: Namespaced
    namespaceSelector:
      matchExpressions:
        {{- with .Values.selectors.namespaceSelector.matchExpressions }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - key: {{ .Values.selectors.injectPrefix }}/{{ .Values.selectors.disableInjectLabel }}
          operator: NotIn
          values:
            - "true"
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - {{ .Release.Namespace }}
    objectSelector:
      {{- with .Values.selectors.objectSelector.matchLabels }}
      matchLabels:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      matchExpressions:
        - key: {{ .Values.selectors.injectPrefix }}/{{ .Values.selectors.injectName }}
          operator: NotIn
          values:
            - skip
        - key: {{ .Values.selectors.injectPrefix }}/{{ .Values.selectors.disableInjectLabel }}
          operator: NotIn
          values:
            - "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels" . | indent 6 }}
  template:
    metadata:
      annotations:
        generated-cert: {{ sha256sum $cert.Cert }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | indent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "serviceaccount.name" . }}
      containers:
        - name: kubernetes-sidecar-injector
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --port={{ .Values.container.port }}
            - --certFile=/opt/kubernetes-sidecar-injector/certs/cert.pem
            - --keyFile=/opt/kubernetes-sidecar-injector/certs/key.pem
            - --injectPrefix={{ trimSuffix "/" .Values.selectors.injectPrefix }}
            - --injectName={{ .Values.selectors.injectName }}
            - --sidecarDataKey={{ .Values.sidecars.dataKey }}
          volumeMounts:
            - name: {{ .Release.Name }}-certs
              mountPath: /opt/kubernetes-sidecar-injector/certs
              readOnly: true
          ports:
            - name: https
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 4
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 4
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      volumes:
        - name: {{ .Release.Name }}-certs
          secret:
            secretName: {{ include "certs.secret.name" . }}
